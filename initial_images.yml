version: '1.0'
services:

# Genrenciamento

  portainer:
    image: portainer/portainer-ce:latest
    container_name: 'portainer'
    restart: always
    ports:
      - '8000:8000'
      - '9443:9443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - 'portainer_data:/data'
    networks:
      app_net:
        ipv4_address: 172.20.1.2

  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: 'nginx-proxy-manager'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - './data:/data'
      - './letsencrypt:/etc/letsencrypt'
    networks:
      app_net:
        ipv4_address: 172.20.1.3

  consul-server-1:
    image: hashicorp/consul:1.18
    hostname: consul-server-1
    ports:
      - "8500:8500" # UI, API
      - "8600:8600/udp" # DNS
    volumes:
      - './data/consul-server-1:/consul/data'
    command:
      - consul
      - agent
      - -server
      - -bootstrap-expect=2
      - -ui
      - -node=consul-server-1
      - -client=0.0.0.0
      - -data-dir=/consul/data
      - -retry-join=consul-server-2
      - -encrypt=${CONSUL_ENCRYPT_KEY}
    networks:
      app_net:
        ipv4_address: 172.20.1.4

  consul-server-2:
    image: hashicorp/consul:1.18
    hostname: consul-server-2
    volumes:
      - './data/consul-server-2:/consul/data'
    command:
      - consul
      - agent
      - -server
      - -bootstrap-expect=2
      - -node=consul-server-2
      - -client=0.0.0.0
      - -data-dir=/consul/data
      - -retry-join=consul-server-1
      - -encrypt=${CONSUL_ENCRYPT_KEY}
    networks:
      app_net:
        ipv4_address: 172.20.1.5

# Banco de Dados
  postgres-1:
    image: postgres
    restart: always
    shm_size: 128mb
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: example
    networks:
      app_net:
        ipv4_address: 172.20.2.2

  adminer:
    image: adminer
    restart: always
    networks:
      app_net:
        ipv4_address: 172.20.2.3
    ports:
      - 8080:8080

# Api's

# Front-Ends

networks:
  app_net:
    name: network_proxy
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1

volumes:
  portainer_data: